<?php

/**
 * @file
 * Contains linky.module..
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\linky\LinkyInterface;

/**
 * Implements hook_help().
 */
function linky_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the linky module.
    case 'help.page.linky':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Link management Drupal 8 style') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_menu_local_actions_alter().
 */
function linky_menu_local_actions_alter(&$localActions) {
  // Don't do anything if add action already has a destination.
  if (!isset($localActions['entity.linky.add_form']['options']['query']['destination'])) {
    /** @var \Drupal\Core\Routing\RouteProviderInterface $routeProvider */
    $routeProvider = \Drupal::service('router.route_provider');
    $path = '/admin/content/linky';
    $routes = $routeProvider->getRoutesByPattern($path);
    if ($routes->count() > 0) {
      $localActions['entity.linky.add_form']['options']['query']['destination'] = $path;
    }
  }
}

/**
 * Implements hook_module_implements_alter().
 */
function linky_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'entity_predelete') {
    // Remove the menu_link_content implementation.
    unset($implementations['menu_link_content']);
  }
}

/**
 * Implements hook_entity_predelete().
 */
function linky_entity_predelete(EntityInterface $entity) {
  // TODO: Remove this once menu_link_content_entity_predelete handles external
  // urls. Without this, we get an exception thrown since we return the
  // external url for the canonical rel.
  // see https://www.drupal.org/node/2914785
  if (!$entity instanceof LinkyInterface) {
    menu_link_content_entity_predelete($entity);
  }
  else {
    /** @var \Drupal\Core\Menu\MenuLinkManagerInterface $menu_link_manager */
    $menu_link_manager = \Drupal::service('plugin.manager.menu.link');
    foreach ($entity->uriRelationships() as $rel) {
      // Delete all MenuLinkContent links that point to this entity route.
      // Special care is needed for canonical linky routes since toUrl returns
      // the external url.
      if ($rel === 'canonical') {
        $result = $menu_link_manager->loadLinksByRoute('entity.linky.canonical', ['linky' => $entity->id()]);
      }
      else {
        $url = $entity->toUrl($rel);
        $result = $menu_link_manager->loadLinksByRoute($url->getRouteName(), $url->getRouteParameters());
      }

      if ($result) {
        foreach ($result as $id => $instance) {
          if ($instance->isDeletable() && strpos($id, 'menu_link_content:') === 0) {
            $instance->deleteLink();
          }
        }
      }
    }
  }
}
